name: ci

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - machine: windows-2022
            log-dir: "/c/ProgramData/OpenTelemetry .NET AutoInstrumentation/logs"
          - machine: ubuntu-20.04
            log-dir: "/var/log/opentelemetry/dotnet"
          - machine: macos-11
            log-dir: "/var/log/opentelemetry/dotnet"
    runs-on: ${{ matrix.machine }}
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: | 
            6.0.403
            7.0.100
      - run: ./build.cmd Workflow
      - run: brew install coreutils
        if: ${{ runner.os == 'macOS' }}
      - name: Create test directory
        run: sudo mkdir -p ${{ matrix.log-dir }} && sudo chmod a+rwx ${{ matrix.log-dir }}  # workaround before next release
        if: ${{ runner.os != 'Windows' }}
      - name: Test the Shell scripts from README.md
        shell: bash
        run: |
          set -e
          dotnet publish -f net7.0 -c Release ./test/test-applications/integrations/TestApplication.Smoke
          export OTEL_DOTNET_AUTO_HOME="${PWD}/OpenTelemetryDistribution"
          . ./instrument.sh
          ./test/test-applications/integrations/TestApplication.Smoke/bin/Release/net7.0/publish/TestApplication.Smoke
            test "$(ls -A '${{ matrix.log-dir }}' )"
      - name: Test the PowerShell module instructions from README.md
        if: ${{ runner.os == 'Windows' }}
        shell: powershell
        run: |
          $log_path = "C:\ProgramData\OpenTelemetry .NET AutoInstrumentation\logs\*"
          Import-Module "${PWD}/Splunk.OTel.DotNet.psm1"
          [System.Environment]::SetEnvironmentVariable("SPLUNK_OTEL_DOTNET_AUTO_INSTALL_DIR", "${PWD}\OpenTelemetryDistribution", [System.EnvironmentVariableTarget]::Machine)
          Register-OpenTelemetryForCurrentSession -OTelServiceName "MyServiceDisplayName"
          ./test/test-applications/integrations/TestApplication.Smoke/bin/x64/Release/net7.0/TestApplication.Smoke.exe
          if (-not $?) { throw "dotnet help returned exit code: $LASTEXITCODE" }
          if (-not (Test-Path $log_path)) { throw "Log file does not exist. Instrumentation test failed." }
          Remove-Item $log_path
          Unregister-OpenTelemetryForCurrentSession
          ./test/test-applications/integrations/TestApplication.Smoke/bin/x64/Release/net7.0/TestApplication.Smoke.exe
          if (-not $?) { throw "dotnet help returned exit code: $LASTEXITCODE" }
          if (Test-Path $log_path) { throw "Log file exists. Instrumentation unregister failed." }
      - uses: actions/upload-artifact@v3.1.1
        with:
          name: bin-${{ matrix.machine }}
          path: bin/splunk-*.zip

  container-build:
    strategy:
      fail-fast: false
      matrix:
        base-image: [ alpine ]
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v3.1.0
    - name: Build Docker image
      run: |
        docker build \
          --tag splunk-otel-dotnet/${{ matrix.base-image }} \
          --file "./build/docker/${{ matrix.base-image }}.dockerfile" \
          ./build
    - name: Build in Docker container
      run: |
        docker run --rm \
          --mount type=bind,source="${GITHUB_WORKSPACE}",target=/project \
          splunk-otel-dotnet/${{ matrix.base-image }} \
          ./build.sh Workflow
    - uses: actions/upload-artifact@v3.1.1
      with:
        name: bin-${{ matrix.base-image }}
        path: bin/splunk-*.zip
